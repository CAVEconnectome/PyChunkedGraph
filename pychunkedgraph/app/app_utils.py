from flask import current_app
from google.auth import credentials, default as default_creds
from google.cloud import bigtable, datastore

import sys
import numpy as np
import logging
import time

from pychunkedgraph.logging import jsonformatter, flask_log_db
from pychunkedgraph.backend import chunkedgraph

cache = {}


class DoNothingCreds(credentials.Credentials):
    def refresh(self, request):
        pass


def get_bigtable_client(config):
    project_id = config.get('project_id', 'pychunkedgraph')

    if config.get('emulate', False):
        credentials = DoNothingCreds()
    else:
        credentials, project_id = default_creds()

    client = bigtable.Client(admin=True,
                             project=project_id,
                             credentials=credentials)
    return client


def get_datastore_client(config):
    project_id = config.get('project_id', 'pychunkedgraph')

    if config.get('emulate', False):
        credentials = DoNothingCreds()
    else:
        credentials, project_id = default_creds()

    client = datastore.Client(project=project_id, credentials=credentials)
    return client


def get_cg(table_id):
    if (table_id != "pinky100_sv16"):
        raise Exception("Table id not supported. This deployment only allows"
                        " pinky100_sv16!")

    if table_id not in cache:
        instance_id = current_app.config['CHUNKGRAPH_INSTANCE_ID']
        client = get_bigtable_client(current_app.config)

        # Create ChunkedGraph logging
        logger = logging.getLogger(f"{instance_id}/{table_id}")
        logger.setLevel(current_app.config['LOGGING_LEVEL'])

        # prevent duplicate logs from Flasks(?) parent logger
        logger.propagate = False

        handler = logging.StreamHandler(sys.stdout)
        handler.setLevel(current_app.config['LOGGING_LEVEL'])
        formatter = jsonformatter.JsonFormatter(
            fmt=current_app.config['LOGGING_FORMAT'],
            datefmt=current_app.config['LOGGING_DATEFORMAT'])
        formatter.converter = time.gmtime
        handler.setFormatter(formatter)

        logger.addHandler(handler)

        # Create ChunkedGraph
        cache[table_id] = chunkedgraph.ChunkedGraph(table_id=table_id,
                                                    instance_id=instance_id,
                                                    client=client,
                                                    logger=logger)
    current_app.table_id = table_id
    return cache[table_id]


def get_log_db(table_id):
    if 'log_db' not in cache:
        client = get_datastore_client(current_app.config)
        cache["log_db"] = flask_log_db.FlaskLogDatabase(table_id,
                                                        client=client)

    return cache["log_db"]


def tobinary(ids):
    """ Transform id(s) to binary format

    :param ids: uint64 or list of uint64s
    :return: binary
    """
    return np.array(ids).tobytes()


def tobinary_multiples(arr):
    """ Transform id(s) to binary format

    :param arr: list of uint64 or list of uint64s
    :return: binary
    """
    return [np.array(arr_i).tobytes() for arr_i in arr]



soma_ids = [648518346349520559, 648518346349520486, 648518346349520796,
           648518346349493117, 648518346349521082, 648518346349528057,
           648518346349527422, 648518346349528463, 648518346349521329,
           648518346349520212, 648518346349529030, 648518346349483124,
           648518346349519863, 648518346349520218, 648518346349520518,
           648518346349521328, 648518346349519260, 648518346349478248,
           648518346349520521, 648518346349484607, 648518346349521467,
           648518346349519418, 648518346349520526, 648518346349519378,
           648518346349520746, 648518346349519205, 648518346349520536,
           648518346349500155, 648518346349517775, 648518346349520543,
           648518346349519847, 648518346349518938, 648518346349519976,
           648518346349519354, 648518346349512870, 648518346349519910,
           648518346349509524, 648518346349516062, 648518346349520718,
           648518346349515981, 648518346349519459, 648518346349517723,
           648518346349519216, 648518346349519201, 648518346349519412,
           648518346349519328, 648518346349520828, 648518346349516573,
           648518346349519062, 648518346349516967, 648518346349498239,
           648518346349498286, 648518346349520572, 648518346349498406,
           648518346349494539, 648518346349520700, 648518346349519199,
           648518346349520709, 648518346349503591, 648518346349483956,
           648518346349520366, 648518346349496245, 648518346349498566,
           648518346349519896, 648518346349519215, 648518346349502049,
           648518346349520407, 648518346349519150, 648518346349519884,
           648518346349520948, 648518346349519284, 648518346349520483,
           648518346349520872, 648518346349482676, 648518346349519233,
           648518346349519382, 648518346349517724, 648518346349499297,
           648518346349519298, 648518346349519440, 648518346349517384,
           648518346349490654, 648518346349499369, 648518346349500657,
           648518346349520624, 648518346349500440, 648518346349520189,
           648518346349520079, 648518346349521271, 648518346349519439,
           648518346349519413, 648518346349516758, 648518346349519377,
           648518346349520448, 648518346349521472, 648518346349519035,
           648518346349516968, 648518346349519030, 648518346349519096,
           648518346349517037, 648518346349516795, 648518346349500627,
           648518346349495846, 648518346349500954, 648518346349500742,
           648518346349520014, 648518346349495174, 648518346349501216,
           648518346349521056, 648518346349517983, 648518346349520204,
           648518346349520140, 648518346349503473, 648518346349503453,
           648518346349503924, 648518346349503588, 648518346349519981,
           648518346349504130, 648518346349504324, 648518346349504754,
           648518346349504442, 648518346349495243, 648518346349494969,
           648518346349495309, 648518346349491045, 648518346349493653,
           648518346349504565, 648518346349519339, 648518346349504618,
           648518346349519926, 648518346349504955, 648518346349505250,
           648518346349521218, 648518346349505061, 648518346349505144,
           648518346349490614, 648518346349505450, 648518346349505512,
           648518346349505826, 648518346349505640, 648518346349505739,
           648518346349520485, 648518346349506008, 648518346349506513,
           648518346349506159, 648518346349506425, 648518346349507175,
           648518346349506778, 648518346349507226, 648518346349520053,
           648518346349520488, 648518346349487499, 648518346349509410,
           648518346349520202, 648518346349506952, 648518346349521425,
           648518346349520517, 648518346349519869, 648518346349520210,
           648518346349492197, 648518346349507015, 648518346349507087,
           648518346349520801, 648518346349507351, 648518346349507537,
           648518346349507658, 648518346349507788, 648518346349507963,
           648518346349508212, 648518346349519734, 648518346349488659,
           648518346349521004, 648518346349495240, 648518346349519494,
           648518346349519861, 648518346349518169, 648518346349520676,
           648518346349520726, 648518346349494087, 648518346349519752,
           648518346349521083, 648518346349521455, 648518346349521420,
           648518346349520024, 648518346349519458, 648518346349519468,
           648518346349521409, 648518346349519053, 648518346349520605,
           648518346349521378, 648518346349508960, 648518346349510900,
           648518346349513135, 648518346349520994, 648518346349519525,
           648518346349510951, 648518346349512199, 648518346349512496,
           648518346349518537, 648518346349520696, 648518346349494194,
           648518346349494004, 648518346349521013, 648518346349484832,
           648518346349492882, 648518346349521359, 648518346349479929,
           648518346349492682, 648518346349493606, 648518346349520558,
           648518346349496405, 648518346349529037, 648518346349521098,
           648518346349493354, 648518346349492130, 648518346349493260,
           648518346349493487, 648518346349494577, 648518346349493472,
           648518346349493874, 648518346349520120, 648518346349495181,
           648518346349491311, 648518346349521301, 648518346349506808,
           648518346349517132, 648518346349487432, 648518346349493894,
           648518346349487523, 648518346349491816, 648518346349487752,
           648518346349519775, 648518346349509367, 648518346349521055,
           648518346349520197, 648518346349517311, 648518346349512186,
           648518346349511321, 648518346349518096, 648518346349516055,
           648518346349516051, 648518346349515985, 648518346349515986,
           648518346349521502, 648518346349477331, 648518346349488919,
           648518346349488947, 648518346349489861, 648518346349489985,
           648518346349516057, 648518346349517783, 648518346349508925,
           648518346349517139, 648518346349518886, 648518346349521113,
           648518346349511920, 648518346349513012, 648518346349520134,
           648518346349519159, 648518346349519021, 648518346349515896,
           648518346349521334, 648518346349520327, 648518346349516704,
           648518346349520328, 648518346349521029, 648518346349527745,
           648518346349519033, 648518346349520985, 648518346349519740,
           648518346349516826, 648518346349520330, 648518346349521720,
           648518346349527158, 648518346349522959, 648518346349523868,
           648518346349523254, 648518346349523126, 648518346349521907,
           648518346349523673, 648518346349523667, 648518346349523679,
           648518346349521654, 648518346349523334, 648518346349522494,
           648518346349522757, 648518346349522750, 648518346349522809,
           648518346349524179, 648518346349522410, 648518346349522735,
           648518346349522795, 648518346349522408, 648518346349522158,
           648518346349522490, 648518346349522414, 648518346349522223,
           648518346349524056, 648518346349523975, 648518346349523993,
           648518346349523981, 648518346349523908, 648518346349524068,
           648518346349521825, 648518346349521908, 648518346349522227,
           648518346349522708, 648518346349523665, 648518346349523322,
           648518346349522310, 648518346349522709, 648518346349523306,
           648518346349523300, 648518346349523385, 648518346349521945,
           648518346349522154, 648518346349522430, 648518346349522485,
           648518346349523651, 648518346349522123, 648518346349521648,
           648518346349523266, 648518346349522789, 648518346349522220,
           648518346349523663, 648518346349522706, 648518346349528994,
           648518346349523312, 648518346349522317, 648518346349522157,
           648518346349521732, 648518346349521619, 648518346349523996,
           648518346349521873, 648518346349521965, 648518346349522749,
           648518346349524073, 648518346349522230, 648518346349524835,
           648518346349524063, 648518346349524739, 648518346349523809,
           648518346349521939, 648518346349521813, 648518346349523368,
           648518346349522118, 648518346349524141, 648518346349525066,
           648518346349522057, 648518346349521918, 648518346349525190,
           648518346349525188, 648518346349522169, 648518346349523030,
           648518346349523129, 648518346349523019, 648518346349522926,
           648518346349522857, 648518346349522675, 648518346349523844,
           648518346349522849, 648518346349525852, 648518346349521767,
           648518346349522980, 648518346349522881, 648518346349524933,
           648518346349525012, 648518346349523869, 648518346349524971,
           648518346349524023, 648518346349524905, 648518346349524843,
           648518346349525131, 648518346349524790, 648518346349525144,
           648518346349524142, 648518346349521916, 648518346349522862,
           648518346349522122, 648518346349521839, 648518346349522047,
           648518346349522060, 648518346349524633, 648518346349522420,
           648518346349526419, 648518346349521872, 648518346349522722,
           648518346349523687, 648518346349524662, 648518346349523345,
           648518346349525299, 648518346349522740, 648518346349524166,
           648518346349521585, 648518346349529036, 648518346349521493]