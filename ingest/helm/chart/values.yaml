global:
  googleProject: &default_project "neuromancer-seung-import"

# these will be converted to configmaps
env:
- name: common
  vars:
    SHELL: /bin/bash
- name: flask
  vars:
    FLASK_APP: run_dev.py
    APP_SETTINGS: pychunkedgraph.app.config.DeploymentWithRedisConfig
- name: pychunkedgraph
  vars:
    REDIS_PASSWORD: ""
    REDIS_SERVICE_HOST: "10.188.216.243"
    REDIS_SERVICE_PORT: "6379"
    BIGTABLE_PROJECT: *default_project
    # BIGTABLE_INSTANCE: chunkedgraphs
    BIGTABLE_INSTANCE: pychunkedgraph
    GOOGLE_APPLICATION_CREDENTIALS: /root/.cloudvolume/secrets/google-secret.json
    PCG_GRAPH_IDS: "minnie3_v1,pinky_nf_v2,pinky_v2_microns_sandbox"


masterDeployment:
  name: master
  image:
    # repository: &imageRep gcr.io/zetta-lee-fly-vnc-001/pychunkedgraph
    # repository: &imageRep gcr.io/fanc-fly/pychunkedgraph
    repository: &imageRep gcr.io/neuromancer-seung-import/pychunkedgraph
    # repository: &imageRep gcr.io/em-270621/pychunkedgraph
    tag: &imageTag ingestv2
    pullPolicy: Always
  resources:
    requests:
      memory: 1G


atomicWorkers:
  enabled: &atomicEnabled false
  name: atomic # layer 2
  pool: workers
  image:
    repository: *imageRep
    tag: *imageTag
    pullPolicy: Always
  resources:
    requests:
      memory: 2G
  hpa:
    enabled: *atomicEnabled
    minReplicas: 1


abstractWorkers:
  enabled: &abstractEnabled false
  name: abstract # layers 2 and above
  pool: workers
  image:
    repository: *imageRep
    tag: *imageTag
    pullPolicy: Always
  resources:
    requests:
      memory: 5G
  hpa:
    enabled: *abstractEnabled
    minReplicas: 1

meshWorkers:
  enabled: &meshEnabled true
  name: mesh # layer 2
  pool: workers-high
  image:
    repository: *imageRep
    tag: *imageTag
    pullPolicy: Always
  resources:
    requests:
      memory: 20G
  hpa:
    enabled: *meshEnabled
    minReplicas: 10
